{"version":3,"sources":["components/layout/spinner.gif","components/layout/Navbar.js","context/github/GithubState.js","context/github/githubContext.js","context/alert/alertContext.js","components/users/Search.js","components/users/UserItem.js","components/layout/Spinner.js","components/users/Users.js","components/pages/home.js","components/repos/RepoItem.js","components/repos/Repos.js","components/users/User.js","components/layout/Alert.js","components/pages/About.js","components/pages/notFound.js","context/github/githubReducer.js","context/types.js","context/alert/alertReducer.js","context/alert/AlertState.js","App.js","index.js"],"names":["module","exports","Navbar","icon","title","className","to","defaultProps","githubClientId","githubClientSecret","githubContext","createContext","alertContext","Search","useContext","GithubContext","AlertContext","useState","text","setText","onSubmit","e","preventDefault","setAlert","searchUsers","type","name","placeholder","value","onChange","target","users","length","onClick","clearUsers","UserItem","user","login","avatar_url","html_url","src","alt","style","width","Spinner","spinner","margin","display","userStyle","gridTemplateColumns","gridGap","Users","loading","map","key","id","home","RepoItem","repo","href","Repos","repos","User","match","getUser","getUserRepos","useEffect","params","location","bio","blog","followers","following","public_repos","public_gists","hireable","company","Alert","alert","msg","About","NotFound","state","action","payload","process","NODE_END","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","props","useReducer","GithubReducer","dispatch","a","setLoading","axios","get","res","data","items","username","Provider","children","AlertState","AlertReducer","setTimeout","App","exact","path","component","Home","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.681aa285.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.61c188cc.gif\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst Navbar = ({ icon, title }) => {\n  return (\n    <nav className=\"navbar bg-primary\">\n      <h1>\n        <i className={icon} /> {title}\n      </h1>\n      <ul>\n        <li>\n          <Link to=\"/\">HOME</Link>\n        </li>\n        <li>\n          <Link to=\"/about\">ABOUT</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\nNavbar.defaultProps = {\n  title: \"Github Finder\",\n  icon: \"fab fa-github\"\n};\n\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired\n};\n\nexport default Navbar;\n","import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport GithubContext from \"./githubContext\";\nimport GithubReducer from \"./githubReducer\";\nimport {\n  SEARCH_USERS,\n  SET_LOADING,\n  CLEAR_USERS,\n  GET_USER,\n  GET_REPOS\n} from \"../types\";\n\nlet githubClientId;\nlet githubClientSecret;\n\nif (process.env.NODE_END !== \"production\") {\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n} else {\n  githubClientId = process.env.GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\n}\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n\n  const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n  // Search User\n  const searchUsers = async text => {\n    setLoading();\n    const res = await axios.get(\n      `https://api.github.com/search/users?q=${text}&client_id=${githubClientId}&client_secret=${githubClientSecret}`\n    );\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items\n    });\n  };\n  // Get User\n  const getUser = async username => {\n    setLoading();\n    const res = await axios.get(\n      `https://api.github.com/users/${username}?client_id=${githubClientId}&client_secret=${githubClientSecret}`\n    );\n    dispatch({\n      type: GET_USER,\n      payload: res.data\n    });\n  };\n\n  // Get Repos\n  const getUserRepos = async username => {\n    setLoading();\n    const res = await axios.get(\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${githubClientId}&client_secret=${githubClientSecret}`\n    );\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  };\n  // Clear Users\n  const clearUsers = () => dispatch({ type: CLEAR_USERS });\n\n  // Set Loading\n  const setLoading = () => dispatch({ type: SET_LOADING });\n  return (\n    <GithubContext.Provider\n      value={{\n        users: state.users,\n        user: state.user,\n        repos: state.repos,\n        loading: state.loading,\n        searchUsers,\n        clearUsers,\n        getUser,\n        getUserRepos\n      }}\n    >\n      {props.children}\n    </GithubContext.Provider>\n  );\n};\n\nexport default GithubState;\n","import { createContext } from \"react\";\n\nconst githubContext = createContext();\n\nexport default githubContext;\n","import { createContext } from \"react\";\n\nconst alertContext = createContext();\n\nexport default alertContext;\n","import React, { useState, useContext } from \"react\";\nimport GithubContext from \"../../context/github/githubContext\";\nimport AlertContext from \"../../context/alert/alertContext\";\n\nconst Search = () => {\n  const githubContext = useContext(GithubContext);\n  const alertContext = useContext(AlertContext);\n  const [text, setText] = useState(\"\");\n\n  const onChange = e => setText(e.target.value);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (text === \"\") {\n      alertContext.setAlert(\"Please enter a name...\", \"light\");\n    } else {\n      githubContext.searchUsers(text);\n      setText(\"\");\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmit} className=\"form\">\n        <input\n          type=\"text\"\n          name=\"text\"\n          placeholder=\"Search Users...\"\n          value={text}\n          onChange={onChange}\n        />\n        <input\n          type=\"submit\"\n          value=\"Search\"\n          className=\"btn btn-dark btn-block\"\n        />\n      </form>\n      {githubContext.users.length > 0 && (\n        <button\n          className=\"btn btn-light btn-block\"\n          onClick={githubContext.clearUsers}\n        >\n          Clear\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst UserItem = ({ user: { login, avatar_url, html_url } }) => {\n  return (\n    <div className=\"card text-center\">\n      <img\n        src={avatar_url}\n        alt=\"\"\n        className=\"round-img\"\n        style={{ width: \"60px\" }}\n      />\n      <h3>{login}</h3>\n      <div>\n        <Link to={`/user/${login}`} className=\"btn btn-dark btn-sm my-1\">\n          More\n        </Link>\n      </div>\n    </div>\n  );\n};\nUserItem.propTypes = {\n  user: PropTypes.object.isRequired\n};\n\nexport default UserItem;\n","import React, { Fragment } from \"react\";\nimport spinner from \"./spinner.gif\";\n\nconst Spinner = () => (\n  <Fragment>\n    <img\n      src={spinner}\n      alt=\"Loading...\"\n      style={{ width: \"200px\", margin: \"auto\", display: \"block\" }}\n    />\n  </Fragment>\n);\n\nexport default Spinner;\n","import React, { useContext } from \"react\";\nimport UserItem from \"./UserItem\";\nimport Spinner from \"../layout/Spinner\";\nimport GithubContext from \"../../context/github/githubContext\";\n\nconst Users = () => {\n  const githubContext = useContext(GithubContext);\n  const { loading, users } = githubContext;\n  \n  if (loading) {\n    return <Spinner />;\n  } else {\n    return (\n      <div style={userStyle}>\n        {users.map(user => (\n          <UserItem key={user.id} user={user} />\n        ))}\n      </div>\n    );\n  }\n};\n\nconst userStyle = {\n  display: \"grid\",\n  gridTemplateColumns: \"repeat(3, 1fr)\",\n  gridGap: \"1rem\"\n};\n\nexport default Users;\n","import React, { Fragment } from \"react\";\nimport Search from \"../../components/users/Search\";\nimport Users from \"../../components/users/Users\";\n\nconst home = () => (\n  <Fragment>\n    <Search />\n    <Users />\n  </Fragment>\n);\n\nexport default home;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst RepoItem = ({ repo }) => {\n  return (\n    <div className=\"card\">\n      <h3>\n        <a href={repo.html_url}>{repo.name}</a>\n      </h3>\n    </div>\n  );\n};\n\nRepoItem.propTypes = {\n  repo: PropTypes.object.isRequired\n};\n\nexport default RepoItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport RepoItem from \"./RepoItem\";\n\nconst Repos = ({ repos }) => {\n  return repos.map(repo => <RepoItem repo={repo} key={repo.id} />);\n};\n\nRepos.propTypes = {\n  repos: PropTypes.array.isRequired\n};\n\nexport default Repos;\n","import React, { useEffect, Fragment, useContext } from \"react\";\nimport Spinner from \"../layout/Spinner\";\nimport Repos from \"../repos/Repos\";\nimport { Link } from \"react-router-dom\";\nimport GithubContext from \"../../context/github/githubContext\";\n\nconst User = ({ match }) => {\n  const githubContext = useContext(GithubContext);\n  const { getUser, loading, user, repos, getUserRepos } = githubContext;\n\n  useEffect(() => {\n    getUser(match.params.login);\n    getUserRepos(match.params.login);\n    // eslint-disable-next-line\n  }, []);\n\n  const {\n    name,\n    avatar_url,\n    location,\n    bio,\n    blog,\n    login,\n    html_url,\n    followers,\n    following,\n    public_repos,\n    public_gists,\n    hireable,\n    company\n  } = user;\n\n  if (loading) return <Spinner />;\n\n  return (\n    <Fragment>\n      <Link to=\"/\" className=\"btn btn-light\">\n        Back to Search\n      </Link>\n      Hireable:{\" \"}\n      {hireable ? (\n        <i className=\"fas fa-check text-success\" />\n      ) : (\n        <i className=\"fas fa-times-circle text-danger\" />\n      )}\n      <div className=\"card grid-2\">\n        <div className=\"all-center\">\n          <img\n            src={avatar_url}\n            className=\"round-img\"\n            alt=\"\"\n            style={{ width: \"150px\" }}\n          />\n          <h1>{name}</h1>\n          <p>Location: {location}</p>\n        </div>\n        <div>\n          {bio && (\n            <Fragment>\n              <h3>Bio</h3>\n              <p>{bio}</p>\n            </Fragment>\n          )}\n          <a href={html_url} className=\"btn btn-dark my-1\">\n            Visit Github Profile\n          </a>\n          <ul>\n            <li>\n              {login && (\n                <Fragment>\n                  <strong>Username: </strong> {login}\n                </Fragment>\n              )}\n            </li>\n            <li>\n              {company && (\n                <Fragment>\n                  <strong>Company: </strong> {company}\n                </Fragment>\n              )}\n            </li>\n            <li>\n              {blog && (\n                <Fragment>\n                  <strong>Website: </strong> {blog}\n                </Fragment>\n              )}\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"card text-center\">\n        <div className=\"badge badge-primary\">Followers: {followers}</div>\n        <div className=\"badge badge-success\">Following: {following}</div>\n        <div className=\"badge badge-light\">Public Repos: {public_repos}</div>\n        <div className=\"badge badge-dark\">Public Gists: {public_gists}</div>\n      </div>\n      <Repos repos={repos} />\n    </Fragment>\n  );\n};\n\nexport default User;\n","import React, { useContext } from \"react\";\nimport AlertContext from \"../../context/alert/alertContext\";\n\nconst Alert = () => {\n  const alertContext = useContext(AlertContext);\n  const { alert } = alertContext;\n\n  return (\n    alert !== null && (\n      <div className={`alert alert-${alert.type}`}>\n        <i className=\"fa fa-info-circle\"></i> {alert.msg}\n      </div>\n    )\n  );\n};\n\nexport default Alert;\n","import React, { Fragment } from \"react\";\n\nconst About = () => {\n  return (\n    <Fragment>\n      <h1>About This App</h1>\n      <p>App to search Github</p>\n      <p>Version 1.0.0</p>\n    </Fragment>\n  );\n};\n\nexport default About;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1>Not Found</h1>\n      <p className=\"lead\">The Page You Are Looking For Does Not Exist</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import {\n  SEARCH_USERS,\n  SET_LOADING,\n  CLEAR_USERS,\n  GET_USER,\n  GET_REPOS\n} from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SEARCH_USERS:\n      return {\n        ...state,\n        users: action.payload,\n        loading: false\n      };\n    case GET_USER:\n      return {\n        ...state,\n        user: action.payload,\n        loading: false\n      };\n    case CLEAR_USERS:\n      return {\n        ...state,\n        users: [],\n        loading: false\n      };\n    case GET_REPOS:\n      return {\n        ...state,\n        repos: action.payload,\n        loading: false\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n};\n","export const SEARCH_USERS = \"SEARCH_USERS\";\nexport const GET_USER = \"GET_USER\";\nexport const CLEAR_USERS = \"CLEAR_USERS\";\nexport const GET_REPOS = \"GET_REPOS\";\nexport const SET_LOADING = \"SET_LOADING\";\nexport const SET_ALERT = \"SET_ALERT\";\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\n","import { SET_ALERT, REMOVE_ALERT } from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_ALERT:\n      return action.payload;\n    case REMOVE_ALERT:\n      return null;\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from \"react\";\nimport AlertContext from \"./alertContext\";\nimport AlertReducer from \"./alertReducer\";\nimport { SET_ALERT, REMOVE_ALERT } from \"../types\";\n\nconst AlertState = props => {\n  const initialState = null;\n\n  const [state, dispatch] = useReducer(AlertReducer, initialState);\n\n  // Set Alert\n  const setAlert = (msg, type) => {\n    dispatch({\n      type: SET_ALERT,\n      payload: { msg, type }\n    });\n    setTimeout(() => dispatch({ type: REMOVE_ALERT }), 5000);\n  };\n  return (\n    <AlertContext.Provider\n      value={{\n        alert: state,\n        setAlert\n      }}\n    >\n      {props.children}\n    </AlertContext.Provider>\n  );\n};\n\nexport default AlertState;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Home from \"./components/pages/home\";\nimport User from \"./components/users/User\";\n\nimport Alert from \"./components/layout/Alert\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/notFound\";\nimport GithubState from \"./context/github/GithubState\";\nimport AlertState from \"./context/alert/AlertState\";\n\nconst App = () => {\n  return (\n    <GithubState>\n      <AlertState>\n        <Router>\n          <div className=\"App\">\n            <Navbar title=\"Github Finder\" icon=\"fab fa-github\" />\n            <div className=\"container\">\n              <Alert />\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/user/:login\" component={User} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </AlertState>\n    </GithubState>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}